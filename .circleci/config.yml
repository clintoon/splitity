version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:
  build:
    working_directory: ~/split-my-prs
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: yarn-cache-v4-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          key: yarn-cache-v4-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
            - web/node_modules
      - run:
          name: Run jest unit tests
          command: yarn jest --collectCoverage=true --ci --maxWorkers=1
          working_directory: web
      - store_artifacts:
          path: web/coverage
      - codecov/upload:
          file: web/coverage/*.json
          flags: frontend,unit
  backend_build:
    working_directory: ~/split-my-prs
    docker:
      - image: circleci/ruby:2.7.0-node
        environment:
          BUNDLER_VERSION: 2.0.1
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            cd backend
            sudo apt-get update
            sudo apt -y install cmake
      - restore_cache:
          keys:
            - rails-bundle-v1-{{ checksum "backend/Gemfile.lock" }}
      - run:
          name: Install dependencies
          command: |
            cd backend
            bundle check || bundle install
      - save_cache:
          key: rails-bundle-v1-{{ checksum "backend/Gemfile.lock" }}
          paths:
            - backend/vendor/bundle
      - run:
          name: Setup database
          command: |
            cd backend
            bin/rails db:setup
      - run:
          name: Run rails unit tests
          command: |
            cd backend
            DISABLE_SPRING=1 CI=true bin/rails test
      - store_artifacts:
          path: backend/coverage
      - codecov/upload:
          file: backend/coverage/.resultset.json
          flags: backend,unit
  build_dev_web:
    working_directory: ~/split-my-prs
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and push Web Docker image
          command: |
            TAG="dev-${CIRCLE_BUILD_NUM}"

            docker build --file "web.Dockerfile" --build-arg \
            REACT_APP_FIREBASE_KEY="${REACT_APP_FIREBASE_KEY}" \
            REACT_APP_FIREBASE_DOMAIN="${REACT_APP_FIREBASE_DOMAIN}" \
            REACT_APP_FIREBASE_PROJECT_ID="${REACT_APP_FIREBASE_PROJECT_ID}" \
            REACT_APP_FIREBASE_APP_ID="${REACT_APP_FIREBASE_APP_ID}" \
            GITHUB_APP_NAME="${GITHUB_APP_NAME}" \
            BACKEND_API_URL="${BACKEND_API_URL}" \
            MIXPANEL_TOKEN="${MIXPANEL_TOKEN}" \
            --tag "$DOCKER_LOGIN/splitity-web:$TAG" .

            docker login -username "$DOCKER_LOGIN" --password "$DOCKER_PASSWORD"
            docker push "$DOCKER_LOGIN/splitity-web:$TAG"
workflows:
  unit_tests:
    jobs:
      - build
      - backend_build
      - build_dev_web:
          context: splitity-dev-web
